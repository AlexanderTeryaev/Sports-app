
@model EditUnionForm
@{
    var blockades = Session["UnblockadedPlayers"] as List<DataService.DTO.PlayersBlockadeShortDTO>;
    var hasBlockades = blockades != null && blockades.Count > 0 ? true : false;
    var isUnionViewer = ViewBag.IsUnionViewer != null ? ViewBag.IsUnionViewer : false;
    string leagueCapture, tournamentCapture, teamsValue, createValue, exportValue, addTorunament = string.Empty;
    UIHelpers.GetUnionClubInfoCaption(Model.SectionAlias, out tournamentCapture, out leagueCapture, out teamsValue, out createValue, out exportValue, out addTorunament);
    string divSize = Model.SectionIsIndividual ? "col-sm-12" : "col-sm-9";
    //bool isRefereeRole = User.HasTopLevelJob(JobRole.RefereeAssignment);
    bool isValidToShowRegionalfederations = false;
    isValidToShowRegionalfederations = ViewBag.IsRegionallevelEnabled;

    bool isRefereeRole = User.GetSessionWorkerValueOrTopLevelSeasonJob(Model.SeasonId ?? -1) == JobRole.RefereeAssignment;

}
@Html.HiddenFor(m => m.SeasonId)
<style>
    .dropdown-menu {
        max-height: 400px;
        overflow-y: auto;
        overflow-x: hidden;
    }
</style>
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" media="print" rel="stylesheet" />
<div class="row">
    <div class="col-lg-8">
        <h3 class="sub-header">
            @{
                if (User.IsInAnyRole(AppRole.Admins, AppRole.Editors))
                {

                    <a href="@Url.Action("Edit", "Sections", new {id = Model.SectionId})">@Model.SectionName</a>
                }
                else
                {
                    @Model.SectionName
                }
            }
            &raquo; @Model.UnionName
        </h3>
    </div>

    @if (User.IsInAnyRole(AppRole.Admins))
    {
        <div class="col-lg-2">
            <div class="form-group" style="margin-top: 20px">
                <a class="btn btn-default" data-toggle="modal" data-target="#importImgModal">@Messages.ImportPlayerImages</a>
                <a class="btn btn-default" data-toggle="modal" data-target="#importIDFilesModal">@Messages.ImportIdFiles</a>
            </div>
            @Html.Partial("_ImportFiles")
        </div>
    }

    <div class="col-lg-2">
        <div class="form-group" style="margin-top: 20px">
            @Html.DropDownListFor(m => m.SeasonId, new SelectList(Model.Seasons, "Id", "Name"), new { @class = "form-control", @id = "ddlSeasons" })
        </div>
    </div>
</div>

<ul class="nav nav-tabs" id="section_tabs" role="tablist">
    <li class="active"><a href="#details" data-toggle="tab">@Messages.Info</a></li>

    @if (isValidToShowRegionalfederations)
    {
        <li><a href="#regionalfed" data-toggle="tab" id="achRegional">@Messages.Regions</a></li>
    }
    @if (!isRefereeRole)
    {
        <li>
           <a href="#clubs" data-toggle="tab">
            @if (Model.SectionAlias.Equals(GamesAlias.Bicycle) || Model.SectionAlias == GamesAlias.WaveSurfing)
            { 
                    @Messages.SurfingClub
            }
            else
            {
                    @Messages.ClubsInSection
            }
           </a>
        </li>
        <!-- <li><a href="#flowers" data-toggle="tab">@Messages.FlowersOfSport</a></li>  -->
        if (Model.SectionAlias != GamesAlias.WeightLifting)
        {
            if (Model.HasDisciplines)
            {
                <li>
                    <a href="#disciplines" data-toggle="tab">
                        @if (Model.IsRowing)
                        {
                            @Messages.BoatsAndDistances
                        }
                        else if (Model.SectionAlias.Equals(GamesAlias.Bicycle))
                        {
                            @Messages.Heats
                        }
                        else
                        {
                            @Messages.Disciplines
                        }
                    </a>
                </li>
            }
            else if (!Model.HasDisciplines && !string.Equals(Model.SectionAlias, SectionAliases.MartialArts, StringComparison.OrdinalIgnoreCase))
            {
                <li><a href="#leagues" data-toggle="tab">@leagueCapture</a></li>
            }
        }
    }
    @if (Model.SectionAlias.Equals(GamesAlias.Swimming))
    {
        <li><a href="#medicalInstitutes" data-toggle="tab">@Messages.MedicalInstitutes</a></li>
    }
    @if (Model.SectionAlias.Equals(GamesAlias.Bicycle))
    {
        <li><a href="#prices" data-toggle="tab">@Messages.Prices</a></li>
    }
    @if (Model.SectionAlias.Equals(GamesAlias.Athletics) || Model.SectionAlias.Equals(GamesAlias.Rowing) || Model.SectionAlias.Equals(GamesAlias.WeightLifting, StringComparison.OrdinalIgnoreCase) || Model.SectionAlias.Equals(GamesAlias.Swimming) || Model.SectionAlias.Equals(GamesAlias.Bicycle) || Model.SectionAlias.Equals(GamesAlias.Climbing))
    {
        <li><a href="#competitions" data-toggle="tab">@Messages.Competitions</a></li>
        @*<li><a href="#leagues" data-toggle="tab">@Messages.Leagues</a></li>*@
    }

    @if (User.IsInAnyRole(AppRole.Admins, AppRole.Editors, AppRole.Workers))
    {
        <li><a href="#userstab" data-toggle="tab">@Messages.Workers</a></li>

        if (Model.UnionId == 37 || Model.UnionId == 52)
        {
            <li>
                <a href="#referees" data-toggle="tab">
                    @if (Model.UnionId == 37)
                    {
                        @Messages.Referees
                    }
                    else if (Model.UnionId == 52)
                    {
                        @Messages.RefereesCoaches
                    }
                </a>
            </li>
        }
    }

    @if (!Model.IsCatchBall)
    {
        string caption = UIHelpers.GetPlayerCaption(Model.SectionAlias);

        if (Model.SectionIsIndividual && Model.SectionAlias != GamesAlias.Gymnastic && Model.SectionAlias != GamesAlias.Tennis && Model.SectionAlias != GamesAlias.Climbing)
        {
            caption = Messages.Sportsmans;
        }

        if (Model.SectionAlias.Equals(GamesAlias.Athletics))
        {
            caption = Messages.Athletes;
        }

        if (Model.SectionAlias.Equals(GamesAlias.Bicycle))
        {
            caption = Messages.Riders;
        }

        if (!isRefereeRole)
        {
            <li><a href="#players" data-toggle="tab">@caption</a></li>
        }
    }
    @if (string.Equals(Model.SectionAlias, GamesAlias.Motorsport, StringComparison.OrdinalIgnoreCase))
    {
        <li><a href="#vehicles" data-toggle="tab">@Messages.Vehicles</a></li>
    }

    @if (User.IsInAnyRole(AppRole.Admins, AppRole.Editors, AppRole.Workers))
    {
        if (!string.Equals(Model.SectionAlias, SectionAliases.Surfing, StringComparison.OrdinalIgnoreCase))
        {
            <li><a href="#auditoriums" data-toggle="tab">@UIHelpers.GetAuditoriumCaption(Model.SectionAlias)</a></li>
        }
        if (!Model.HasDisciplines && !string.Equals(Model.SectionAlias, SectionAliases.MartialArts, StringComparison.OrdinalIgnoreCase) && Model.SectionAlias != GamesAlias.WaveSurfing && Model.SectionAlias != GamesAlias.WaveSurfing)
        {
            <li><a href="#schedules" data-toggle="tab">@Messages.GamesTable</a></li>
        }
    }
    @if (!Model.HasDisciplines && Model.SectionAlias != GamesAlias.WaveSurfing && Model.SectionAlias != GamesAlias.WaveSurfing)
    {
        <li>
            <a href="#eilatTournament" data-toggle="tab">
                @if (Model.IsCatchBall)
                {
                    @Messages.EilatTournament
                }
                else if (Model.SectionId == 6)
                {
                    @Messages.Competitions
                }
                else
                {
                    @tournamentCapture
                }

            </a>
        </li>
    }
    @if (string.Equals(Model.SectionAlias, SectionAliases.Tennis, StringComparison.OrdinalIgnoreCase))
    {
        <li><a href="#tennisrankings" data-toggle="tab">@Messages.CompetitionTable</a></li>
    }
    @if (!isRefereeRole)
    {
        <li><a href="#seasons" data-toggle="tab">@Messages.Seasons</a></li>
        if (User.IsInAnyRole(AppRole.Admins, AppRole.Editors, AppRole.Workers))
        {
            <li><a href="#notifications" data-toggle="tab">@Messages.Notifications</a></li>
        }
    }
    @if (ViewBag.JobRole == JobRole.UnionManager || User.IsInAnyRole(AppRole.Admins) || isUnionViewer)
    {
        <li><a href="#activities" data-toggle="tab">@Messages.ManageActivities</a></li>
    }
    <li><a href="#events" data-toggle="tab">@Messages.Events</a></li>
    @*
        @if (ViewBag.JobRole == JobRole.UnionManager || User.IsInAnyRole(AppRole.Admins) || isUnionViewer)
        {
            <li><a href="#banners" data-toggle="tab">@Messages.Banner</a></li>
        }
    *@
    @if (string.Equals(Model.SectionAlias, SectionAliases.Tennis, StringComparison.OrdinalIgnoreCase))
    {
        <li><a href="#benefits" data-toggle="tab">@Messages.Benefits</a></li>
    }
    <li id="unioncalendarview"><a href="#calendar-sector" data-toggle="tab">@Messages.Calendar</a></li>

    @if (Model.SectionAlias.Equals(GamesAlias.Athletics))
    {
        <li><a href="#records" data-toggle="tab">@Messages.Records</a></li>
    }
</ul>

<div id="groupmodal" class="tab-content row offset-3">

    @if (!Model.IsCatchBall)
    {
        <div class="tab-pane fade col-sm-12 offset-2" id="players">
            <div class="players_list" id="players_list">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                   ActionUrl = Url.Action("List", "Players",
                            new { id = Model.UnionId, logicalName = LogicaName.Union, seasonId = Model.SeasonId, isUnionViewer = isUnionViewer }),
                   DataElementId = "players_list"

                })
            </div>
        </div>
    }

    @if (Model.SectionAlias.Equals(GamesAlias.Athletics) ||
         Model.SectionAlias.Equals(GamesAlias.Rowing) ||
         Model.SectionAlias.Equals(GamesAlias.WeightLifting, StringComparison.OrdinalIgnoreCase) ||
         Model.SectionAlias.Equals(GamesAlias.Swimming) ||
         Model.SectionAlias.Equals(GamesAlias.Bicycle) || 
         Model.SectionAlias.Equals(GamesAlias.Climbing))
    {
        <div class="tab-pane fade  col-sm-12" id="competitions">
            <div class="row" id="competitions-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                   ActionUrl = Url.Action("Competitions", "Unions", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                   DataElementId = "competitions-tab"

                })


            </div>
        </div>
        @*<div class="tab-pane fade  col-sm-9" id="leagues">
                  @Html.Action("Leagues", "Unions", new { id = Model.UnionId, seasonId = Model.SeasonId })
            </div>*@
    }


    @if (!Model.HasDisciplines && Model.SectionAlias != GamesAlias.WaveSurfing && Model.SectionAlias != GamesAlias.WaveSurfing)
    {
        <div class="tab-pane fade col-sm-12 offset-2" id="eilatTournament">
            @if (Model.SectionId == 6)
            {
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                    ActionUrl = Url.Action("Competitions", "Unions", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                    DataElementId = "eilatTournament"
                })
            }
            else
            {
                <div class="row" id="eilatTournament-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
                    {
                        ActionUrl = Url.Action("EilatTournament", "Unions", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                        DataElementId = "eilatTournament-tab"

                    })
                </div>
            }

        </div>
    }

    @if (Model.HasDisciplines && Model.SectionAlias != GamesAlias.WeightLifting)
    {
        <div class="tab-pane fade col-sm-12" id="disciplines">

            <div class="row">
                @{ 
                    var bicWidht = Model.SectionAlias.Equals(GamesAlias.Bicycle) ? "width:40%" : "";
                }
                    
                
                <div class="col-sm-6" id="disciplines-tab" style="@bicWidht">
                    @Html.Partial("_TabLoader", new TabLoaderParams
                    {
                        ActionUrl = Url.Action("ListBySection", "Disciplines", new { sectionId = Model.SectionId, unionId = Model.UnionId }),
                        DataElementId = "disciplines-tab"

                    })
                </div>
                @if (Model.SectionAlias.Equals(GamesAlias.Bicycle))
                {
                    <div class="col-sm-6">
                        <div id="friendship_type_data">
                            @Html.Partial("_TabLoader", new TabLoaderParams
                            {
                                ActionUrl = Url.Action("ListFriendshipTypesBySection", "Disciplines", new { sectionId = Model.SectionId, unionId = Model.UnionId }),
                                DataElementId = "friendship_type_data"

                            })
                        </div>
                        <div id="competitonAges_type_data">
                            @Html.Partial("_TabLoader", new TabLoaderParams
                            {
                                ActionUrl = Url.Action("BicycleCompetitionAges", "Unions", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                                DataElementId = "competitonAges_type_data"

                            })
                        </div>
                    </div>
                }
                @if (Model.SectionAlias.Equals(GamesAlias.Rowing))
                {
                    <div class="col-sm-6">
                        <div id="distance_data">
                            @Html.Partial("_TabLoader", new TabLoaderParams
                       {
                           ActionUrl = Url.Action("DistanceTable", "Disciplines", new { @seasonId = Model.SeasonId }),
                           DataElementId = "distance_data"

                       })
                        </div>
                    </div>
                }
                @if (Model.SectionAlias.Equals(GamesAlias.Athletics))
                {
                    <div class="col-sm-6">
                        <h3>@Messages.Settings</h3>
                        <h4>@Messages.MeasurementFormat</h4>
                        <table style="direction:ltr;text-align:center;" class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>@Messages.Input</th>
                                    <th>@Messages.Format</th>
                                    <th>@Messages.Measure</th>
                                    <th>@Messages.Type</th>
                                    <th>@Messages.Sorting</th>
                                    <th>@Messages.MeasureNo</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@.@@")</text></td>
                                    <td style="direction:ltr;">00.00</td>
                                    <td style="direction:ltr;">SS.mm</td>
                                    <td>זמן</td>
                                    <td>נמוך</td>
                                    <td>1</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@:@@.@@")</text></td>
                                    <td style="direction:ltr;">0:00.00</td>
                                    <td style="direction:ltr;">M:SS.mm</td>
                                    <td>זמן</td>
                                    <td>נמוך</td>
                                    <td>2</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@:@@.@@")</text></td>
                                    <td style="direction:ltr;">00:00.00</td>
                                    <td style="direction:ltr;">MM:SS.mm</td>
                                    <td>זמן</td>
                                    <td>נמוך</td>
                                    <td>3</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@:@@:@@.@@")</text></td>
                                    <td style="direction:ltr;">00:00:00.00</td>
                                    <td style="direction:ltr;">HH:MM:SS.mm</td>
                                    <td>זמן</td>
                                    <td>נמוך</td>
                                    <td>4</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@:@@:@@")</text></td>
                                    <td style="direction:ltr;">00:00:00</td>
                                    <td style="direction:ltr;">HH:MM:SS</td>
                                    <td>זמן</td>
                                    <td>נמוך</td>
                                    <td>5</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@.@@")</text></td>
                                    <td style="direction:ltr;">0.00</td>
                                    <td></td>
                                    <td>מרחק</td>
                                    <td>גבוה</td>
                                    <td>6</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@.@@")</text></td>
                                    <td style="direction:ltr;">00.00</td>
                                    <td></td>
                                    <td>מרחק</td>
                                    <td>גבוה</td>
                                    <td>7</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@,@@@")</text></td>
                                    <td style="direction:ltr;">0,000</td>
                                    <td style="direction:ltr;">P,ppp</td>
                                    <td>נקודות</td>
                                    <td>גבוה</td>
                                    <td>8</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@:@@")</text></td>
                                    <td style="direction:ltr;">00:00</td>
                                    <td style="direction:ltr;">MM:SS</td>
                                    <td>זמן</td>
                                    <td>נמוך</td>
                                    <td>9</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@.@@")</text></td>
                                    <td style="direction:ltr;">0.00</td>
                                    <td></td>
                                    <td>מרחק</td>
                                    <td>גבוה</td>
                                    <td>10</td>
                                </tr>
                                <tr>
                                    <td style="direction:ltr;"><text>@Html.Raw("@@.@@")</text></td>
                                    <td style="direction:ltr;">00.00</td>
                                    <td></td>
                                    <td>מרחק</td>
                                    <td>גבוה</td>
                                    <td>11</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    }
    else if (!Model.HasDisciplines && !string.Equals(Model.SectionAlias, SectionAliases.MartialArts, StringComparison.OrdinalIgnoreCase))
    {
        <div class="tab-pane fade  col-sm-12" id="leagues">

            <div class="row" id="leagues-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
           {
               ActionUrl = Url.Action("Leagues", "Unions", new { id = Model.UnionId, seasonId = Model.SeasonId }),
               DataElementId = "leagues-tab"

           })
            </div>
        </div>
    }

    @if (!isRefereeRole)
    {
        <div class="tab-pane fade @divSize" id="clubs">
            <div id="union_clubs">
                <div class="row" id="clubs-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
                    {
                        ActionUrl = Url.Action("ListByUnion", "Clubs", new { id = Model.UnionId, seasonId = Model.SeasonId }),
                        DataElementId = "clubs-tab"
                    })
                </div>

            </div>
        </div>
        <!--  <div class="tab-pane fade col-sm-12" id="flowers">
            <div id="flowers_of_sport">
                <div class="row" id="flowers-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
                    {
                        ActionUrl = Url.Action("ListByUnion", "Clubs", new {id = Model.UnionId, seasonId = Model.SeasonId, isFlowersOfSport = true}),
                        DataElementId = "flowers-tab"
                    })
                </div>

            </div>
        </div> -->
    }

    @if (ViewBag.JobRole == JobRole.UnionManager || User.IsInAnyRole(AppRole.Admins) || isUnionViewer)
    {
        <div class="tab-pane fade" id="activities">
            <div id="activity-list">
                <div class="row" id="activity-list-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
               {
                   ActionUrl = Url.Action("List", "Activity", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                   DataElementId = "activity-list-tab"
               })
                </div>
            </div>
        </div>
    }

    @if (!Model.HasDisciplines && !string.Equals(Model.SectionAlias, SectionAliases.MartialArts, StringComparison.OrdinalIgnoreCase) && Model.SectionAlias != GamesAlias.WaveSurfing && Model.SectionAlias != GamesAlias.WaveSurfing)
    {
        <div class="tab-pane fade" id="schedules">
            <div class="row" id="schedules-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                 {
                     ActionUrl = Url.Action("List", "Sections", new { UnionId = Model.UnionId, seasonId = Model.SeasonId }),
                     DataElementId = "schedules-tab"
                 })
            </div>
        </div>
    }

    <div class="tab-pane fade in active col-sm-12" id="details">
        <div class="row" id="details-tab">
            @Html.Partial("_TabLoader", new TabLoaderParams
               {
                   ActionUrl = Url.Action("Details", new { id = Model.UnionId, seasonId = Model.SeasonId }),
                   DataElementId = "details-tab"
               })
        </div>
    </div>

    @if (Model.SectionId == 6)
    {
        <div class="tab-pane fade col-sm-12 offset-2" id="tennisrankings">
            <div class="row" id="tennisrankings-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                   ActionUrl = Url.Action("TennisUnionRankDetails", "LeagueRank", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                   DataElementId = "tennisrankings-tab"
                })
            </div>
        </div>
    }

    @if (isValidToShowRegionalfederations)
    {
        <div class="tab-pane fade @divSize" id="regionalfed">
            <div id="union_regionalfed">
                <div class="row" id="regionalfed-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
               {
                   ActionUrl = Url.Action("ListRegional", "Regional", new { id = Model.UnionId, seasonId = Model.SeasonId }),
                   DataElementId = "regionalfed-tab"
               })
                </div>
            </div>
        </div>
    }

    @if (Model.SectionAlias == GamesAlias.Bicycle)
    {
        <div class="tab-pane fade  col-sm-12" id="prices">
            <div class="row">
                <div class="col-sm-4">
                    <div id="chip_prices_data">
                        @Html.Partial("_TabLoader", new TabLoaderParams
                   {
                       ActionUrl = Url.Action("ChipPricesList", "Prices", new { seasonId = Model.SeasonId, unionId = Model.UnionId }),
                       DataElementId = "chip_prices_data"
                   })
                    </div>
                </div>
                <div class="col-sm-8">
                    <div id="friendship_prices_data">
                        @Html.Partial("_TabLoader", new TabLoaderParams
                   {
                       ActionUrl = Url.Action("FriendshipPricesList", "Prices", new { seasonId = Model.SeasonId, unionId = Model.UnionId }),
                       DataElementId = "friendship_prices_data"
                   })
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="tab-pane fade col-sm-12" id="userstab">
        <div id="workers_list">
            <div class="row" id="userstab-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                    ActionUrl = Url.Action("WorkerList", "Jobs", new { id = Model.UnionId, logicalName = LogicaName.Union, seasonId = Model.SeasonId, unionId = Model.UnionId }),
                    DataElementId = "userstab-tab",
                    LoadByVisibilityOnly = true
                })
            </div>

        </div>
    </div>

    @if (Model.UnionId == 37 || Model.UnionId == 52)
    {
        <div class="tab-pane fade col-sm-12" id="referees">
            <div id="referee_list">
                <div class="row" id="referees-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
                    {
                       ActionUrl = Url.Action("WorkerList", "Jobs", new { id = Model.UnionId, logicalName = LogicaName.Union, seasonId = Model.SeasonId, onlyReferees = true, unionId = Model.UnionId }),
                       DataElementId = "referees-tab"
                    })
                </div>
            </div>
        </div>
    }

    @if (string.Equals(Model.SectionAlias, GamesAlias.Motorsport, StringComparison.OrdinalIgnoreCase))
    {
        <div class="tab-pane fade col-sm-11 offset-2" id="vehicles">
            <div id="vehicles_List">

                <div class="row" id="vehicles-tab">
                    @Html.Partial("_TabLoader", new TabLoaderParams
                    {
                       ActionUrl = Url.Action("List", "Vehicles", new { id = Model.UnionId, seasonId = Model.SeasonId }),
                       DataElementId = "vehicles-tab",
                       LoadByVisibilityOnly = true
                    })
                </div>
            </div>
        </div>
    }

    @if (!string.Equals(Model.SectionAlias, SectionAliases.Surfing, StringComparison.OrdinalIgnoreCase))
    {
        <div class="tab-pane fade col-sm-7" id="auditoriums">
            <div class="row" id="auditoriums-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                    ActionUrl = Url.Action("List", "Auditoriums", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                    DataElementId = "auditoriums-tab",
                    LoadByVisibilityOnly = true
                })
            </div>
        </div>
    }

    @if (!isRefereeRole)
    {
        <div class="tab-pane fade col-sm-7 offset-2" id="seasons">
            <div class="row" id="seasons-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                   ActionUrl = Url.Action("List", "Seasons", new { entityId = Model.UnionId, logicalName = LogicaName.Union }),
                   DataElementId = "seasons-tab",
                   LoadByVisibilityOnly = true
                })
            </div>
        </div>

        <div class="tab-pane fade" id="notifications">
            <div class="row" id="notifications-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                   ActionUrl = Url.Action("Add", "Notifications", new { entityId = Model.UnionId, logicalName = LogicaName.Union, seasonId = Model.SeasonId }),
                   DataElementId = "notifications-tab",
                   LoadByVisibilityOnly = true
                })
            </div>
        </div>
    }

    @if (Model.SectionAlias.Equals(GamesAlias.Swimming))
    {
        <div class="tab-pane fade col-sm-12" id="medicalInstitutes">
            <div class="row" id="medicalInstitutes-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                    ActionUrl = Url.Action("MedicalInstitutes", "Unions", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                    DataElementId = "medicalInstitutes-tab",
                    LoadByVisibilityOnly = true
                })

            </div>
        </div>
    }

    <div class="tab-pane fade col-sm-10" id="events">
        <div class="row" id="events-tab">
            @Html.Partial("_TabLoader", new TabLoaderParams
            {
               ActionUrl = Url.Action("Index", "Events", new { unionId = Model.UnionId }),
               DataElementId = "events-tab",
               LoadByVisibilityOnly = true
            })
        </div>
    </div>

    @if (Model.SectionAlias.Equals(GamesAlias.Athletics))
    {
        <div class="tab-pane fade" id="records">
            <div class="row" id="records-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                    ActionUrl = Url.Action("Records", "Unions", new { sectionId = Model.SectionId, unionId = Model.UnionId, seasonId = Model.SeasonId }),
                    DataElementId = "records-tab",
                    LoadByVisibilityOnly = true
                })
            </div>
        </div>
    }

    @*
        @if (ViewBag.JobRole == JobRole.UnionManager || User.IsInAnyRole(AppRole.Admins) || isUnionViewer)
        {
            <div class="tab-pane fade" id="banners">
                @Html.Action("List", "Banners", new { parentId = Model.UnionId, isUnion = true })
            </div>
        }
    *@


    @if (Model.SectionAlias.Equals(GamesAlias.Tennis))
    {
        <div class="tab-pane fade" id="benefits">
            <div class="row" id="benefits-tab" style="margin:4px;">
                @Html.Partial("_TabLoader", new TabLoaderParams
                {
                    ActionUrl = Url.Action("Index", "Benefits", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                    DataElementId = "benefits-tab"
                })
            </div>
        </div>
    }

    <div class="tab-pane fade" id="calendar-sector">
        <div id="union-calendar">
            <div class="row" id="union-calendar-tab">
                @Html.Partial("_TabLoader", new TabLoaderParams
               {
                   ActionUrl = Url.Action("Calendar", "Unions", new { unionId = Model.UnionId, seasonId = Model.SeasonId }),
                   DataElementId = "union-calendar-tab",
                   LoadByVisibilityOnly = true
               })
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="newleague" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content"></div>
    </div>
</div>

<div class="modal fade" id="banneredit" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content"></div>
    </div>
</div>

<div class="modal fade" id="newpointsetting" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content"></div>
    </div>
</div>
@*Blockades modal*@
@if (hasBlockades && !User.IsInAnyRole(AppRole.Admins))
{

    var blocadesByType = blockades.GroupBy(b => b.BType);

    IGrouping<int, DataService.DTO.PlayersBlockadeShortDTO> gBlockades = null;
    IGrouping<int, DataService.DTO.PlayersBlockadeShortDTO> gMedCertExpireInMonth = null;
    foreach (var result in blocadesByType)
    {
        if (result.Key == BlockadeType.Blockade)
        {
            gBlockades = result;
        }
        if (result.Key == BlockadeType.MedicalExpiration)
        {
            gMedCertExpireInMonth = result;
        }
    }
    var message1 = Messages.UnblockadedStatusMessage;
    var message2 = Messages.MedicalCertExpirationSoonMessage;
    if (Model.SectionAlias.Equals(GamesAlias.Athletics))
    {
        message1 = message1.Replace(Messages.Player, Messages.Athlete);
        message2 = message2.Replace(Messages.Player, Messages.Athlete);
    }
    else if (Model.SectionIsIndividual)
    {
        message1 = message1.Replace(Messages.Player, Messages.Sportsman);
        message2 = message2.Replace(Messages.Player, Messages.Sportsman);
    }
    var showPopup = !Model.SectionAlias.Equals(GamesAlias.Tennis) || (gBlockades != null && gBlockades.Count() > 0);

    if (showPopup)
    {
        <div class="modal fade" id="unBlockadedPlayersList" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">@Messages.Notifications</h4>
                    </div>
                    <div class="modal-body">
                        @if (gBlockades != null)
                        {
                            <h4 class="modal-title">@Messages.UnblockadedPlayers</h4>
                            foreach (var blockade in gBlockades)
                            {
                                <p>@String.Format(message1, blockade.UserName, blockade.TeamTitle)</p>
                            }
                        }
                        @if (gMedCertExpireInMonth != null && !Model.SectionAlias.Equals(GamesAlias.Tennis))
                        {
                            <h4 class="modal-title">@Messages.MedicalExpirationAlert</h4>
                            foreach (var blockade in gMedCertExpireInMonth)
                            {
                                <p>@String.Format(message2, blockade.UserName, blockade.TeamTitle)</p>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    Session["UnblockadedPlayers"] = null;
}

@section scripts
{
    <script>
        $('#ddlSeasons').change(function () {
            var seasonId = $(this).val();
            $.ajax({
                url: '/Admin/SetUnionCurrentSeason',
                type: 'POST',
                dataType: 'JSON',
                data: { seasonId },
                success: function () {

                }
            });
            window.location.href = '@Url.Action("Edit", new { id = Model.UnionId })?seasonId=' + seasonId;
        });
    </script>

    <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBiwCq-EDCvfhQ786WvFgSQvrSxCgjzsYM&libraries=places"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.refereeids').multiselect({
                onDropdownHide: function(element) {
                    $(element.currentTarget).find('.multiselect-clear-filter').click();
                },
                onDropdownShown: function (element) {
                    $(element.currentTarget).find('.multiselect-search').focus();
                }
            });

            @*var url = '@Html.Raw(Url.Action("List", "Players",
                      new { id = Model.UnionId, logicalName = LogicaName.Union, seasonId = Model.SeasonId, isUnionViewer = isUnionViewer }))';
            $("#players_list").load(url);*@
            if ('@hasBlockades' == 'True')
            {
                $("#unBlockadedPlayersList").modal('show');
            }
            if ('@isUnionViewer' === "True") {
                $("a").attr('disabled', true);
                $(".btn").attr('disabled', true);
                $(".export").attr('disabled', false);
                $(".frm-date").attr('disabled', true);
                $(".auditoriums-display").attr('disabled', true);
                $("#arena_print").attr('disabled', false);
                $("#groupform > div:nth-child(1) > div > table > tbody > tr > td:nth-child(5) > span > div > button").attr('disabled', false);
                $("#date-to-div .btn").attr("disabled", false);
                $(".club-details").attr("disabled", false);
                $(".league-details").attr("disabled", false);
                $('select[name="RefereeIds"]').attr('disabled', true);

            }
        });
        @if (isUnionViewer)
        {
            <text>
            jQuery.fn.extend({
              checkRestriction: function() {
                 $("a").attr('disabled', true);
                $(".btn").attr('disabled', true);
                $(".export").attr('disabled', false);
                $(".frm-date").attr('disabled', true);
                $(".auditoriums-display").attr('disabled', true);
                $("#arena_print").attr('disabled', false);
                $("#groupform > div:nth-child(1) > div > table > tbody > tr > td:nth-child(5) > span > div > button").attr('disabled', false);
                $("#date-to-div .btn").attr("disabled", false);
                $(".club-details").attr("disabled", false);
                $(".league-details").attr("disabled", false);
                $('select[name="RefereeIds"]').attr('disabled', true);
              }
            });
            </text>
        }
    </script>
}