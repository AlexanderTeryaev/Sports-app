@model CmsApp.Models.ImportViewModelBasic

@{
    bool showFileBox = true;
    bool isHebrew = Request.IsHebrew();
    var getCorrectClass = new Func<bool, string>(value =>
    {
        return isHebrew ? "pull-right" : "pull-left";
    });
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only"></span></button>
    <h4 class="modal-title">@Messages.ImportAthletesNumbers</h4>
</div>

@using (Ajax.BeginForm("ImportAthletesNumbers", null, new { UnionId = @ViewBag.UnionId, SeasonId = @ViewBag.SeasonId },
                    new AjaxOptions
                    {
                        HttpMethod = "POST",
                        UpdateTargetId = "athletesimportform_pl"
                    },
                    new
                    {
                        id = "frmImportAthletics",
                        enctype = "multipart/form-data"
                    }))
{

    <div class="modal-body">
        @if (Model.Result.HasValue)
        {
            switch (Model.Result)
            {
                case ImportPlayersResult.Error:
                    showFileBox = true;
                    <text>
                        <div class="alert alert-danger">
                            @if (string.Equals(Model.ResultMessage, Messages.ImportPlayers_ChooseFile, StringComparison.OrdinalIgnoreCase))
                            {
                                <p>@(Model.ResultMessage)</p>

                            }
                            else if (!string.IsNullOrEmpty(Model.ExceptionMessage))
                            {
                                <p>@(Model.ResultMessage)</p>
                                <p>@(Model.ExceptionMessage)</p>
                            }
                            else
                            {
                                <p>@(Model.ResultMessage)&nbsp;&nbsp;<a href="@Url.Action("DownloadPartiallyImportAthletes")"><font style="color:dodgerblue;font-weight:100">@Messages.Download</font></a></p>
                            }
                        </div>
                        <br />
                        <br />
                    </text>
                    break;
                case ImportPlayersResult.PartialyImported:
                    showFileBox = true;
                    <text>
                        <div class="alert alert-info">
                            <p>@Messages.ImportPlayers_PartillyImport.Replace(Messages.Players, $"{Messages.Athletes} {Messages.Numbers.ToLower()}")</p>
                            <p>@Messages.ImportPlayers_PartiallyImportMessage.Replace(Messages.Players.ToLower(), $"{Messages.Athletes} {Messages.Numbers.ToLower()}") - <a class="text-danger" href="@Url.Action("DownloadPartiallyImportAthletes")">@Messages.Download</a></p>
                        </div>
                        <div class="row">
                            <div class="col-md-4">@(Messages.ImportPlayers_SuccessCount.Replace(Messages.Players, $"{Messages.Athletes} {Messages.Numbers.ToLower()}"))</div>
                            <input type="hidden" id="hSuccessCount" value="@(Model.SuccessCount)" />
                            <div class="col-md-8">@(Model.SuccessCount)</div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">@(Messages.ImportPlayers_ValidationErrorCount.Replace(Messages.Players, $"{Messages.Athletes} {Messages.Numbers.ToLower()}"))</div>
                            <div class="col-md-8">@(Model.ErrorCount)</div>
                        </div>
                        <br />
                        <br />
                    </text>
                    break;
                case ImportPlayersResult.Success:
                    showFileBox = false;
                    <text>
                        <div class="alert alert-success">@Messages.ImportPlayers_SuccessImport.Replace(Messages.Players, $"{Messages.Athletes} {Messages.Numbers.ToLower()}")</div>
                        <p>@(Messages.ImportPlayers_SuccessCount.Replace(Messages.Players, $"{Messages.Athletes} {Messages.Numbers.ToLower()}")) - @(Model.SuccessCount)</p>
                    </text>
                    break;
            }
        }
        @if (showFileBox)
        {
            <text>
                <input type="file" id="file-import-from-excel" name="ImportFile" />
            </text>
        }
    </div>
    <div class="modal-footer">
        <div class="@getCorrectClass(isHebrew)" id="loading" style="display:none">
            <span class="fa fa-2x fa-spin fa-spinner"></span>
        </div>
        <button type="button" class="btn btn-default" data-dismiss="modal">@Messages.Close</button>
        @if (Model.Result != ImportPlayersResult.Success)
        {
            <button id="btnImportAthletics" class="btn btn-primary">@Messages.ImportPlayers_StartImport</button>
        }
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        var frm = $('#frmImportAthletics');

        $('#savebtn', frm).click(function () {
            return true;
        });
        $("#athletesimportform").on("hidden.bs.modal", function (e) {
            if ($("@Model.Result" === "@ImportPlayersResult.Success")) {
                window.location.reload();
                $("#loading").hide();
            }
            else {
                $("#loading").hide();
            }
        });
    });

    window.addEventListener("submit", function (e) {
        var form = e.target;
        if (form.getAttribute("enctype") === "multipart/form-data") {
            if (form.dataset.ajax) {
                e.preventDefault();
                e.stopImmediatePropagation();
                var xhr = new XMLHttpRequest();
                xhr.open(form.method, form.action);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        if (form.dataset.ajaxUpdate) {
                            var updateTarget = document.querySelector(form.dataset.ajaxUpdate);
                            if (updateTarget) {
                                updateTarget.innerHTML = xhr.responseText;
                            }
                        }
                    }
                };
                $("#loading").show();
                xhr.send(new FormData(form));
            }
        }
    }, true);

</script>
