@using AppModel
@using DataService.DTO
@using CmsApp.Helpers
@model GamePartialModel

<td class="text-center">

    @if (Model.GuestAthleteId.HasValue)
    {
        var guestTeamDetails = Model.TeamsPlayer?.User;
        var athleteName = guestTeamDetails.FullName;
        <label class="guest-team-label">
            @if (Model.isWaitingDivision && Model.GroupId > 0)
            { <a href="javascript:gcList.unlockGuestTeam(@Model.CycleId)"><i class="fa fa-lock"></i></a>}
            <span class="guest-team-text">@athleteName</span>
        </label>
        if (Model.isWaitingDivision && Model.GroupId > 0)
        {
            <span class="input-group guest-team-drop-down" style="display: none">
                <a href="javascript:gcList.lockGuestTeam(@Model.CycleId)"><i class="fa fa-unlock"></i></a>
                @Html.DropDownList("GuestAthleteId",
                    new SelectList(Model.athletesByGroups[Model.GroupId ?? 0],
                        nameof(AthleteShortDTO.AthleteId), nameof(AthleteShortDTO.Title), Model.TeamsPlayer.Id),
                    //Messages.Select,
                    new
                    {
                        @class = "form-control guest-team-id",
                        @form = $"gamefrm{Model.CycleId}",
                        @onchange = $"gcList.GuestTeamChanged({Model.CycleId}, this.options[this.selectedIndex].innerText)"
                    })
            </span>
        }

        if (Model.GoldenSet != null && Model.GoldenSet.HomeTeamScore < Model.GoldenSet.GuestTeamScore)
        {
            <span class="label label-warning">@Messages.GoldenSet</span>
        }
        if (Model.TechnicalWinnnerId == Model.TeamsPlayer.Id)
        {
            <span class="label label-success">@Messages.TechWin</span>
        }
    }
    else if (Model.GuestTeamPos.HasValue)
    {
        <label class="guest-team-label">
            <span class="guest-team-text">@UIHelpers.GetAthletePosition(Model.GuestTeamPos.Value)</span>
        </label>
    }
    else if (Model.PlayoffBracket?.Parent2 != null && Model.PlayoffBracket.Type == (int)PlayoffBracketType.Winner &&
        Model.PlayoffBracket.Parent2.Team2GroupPosition == 0 && Model.PlayoffBracket.Parent2.Team1GroupPosition.HasValue)
    {
        <label class="home-team-label">
            <span class="home-team-text">@UIHelpers.GetAthletePosition(Model.PlayoffBracket.Parent2.Team1GroupPosition.Value)</span>
        </label>
    }
    else if (Model.PlayoffBracket?.Parent2 != null && Model.PlayoffBracket.Type == (int)PlayoffBracketType.Winner &&
             Model.PlayoffBracket.Parent2.Team1GroupPosition == 0 && Model.PlayoffBracket.Parent2.Team2GroupPosition.HasValue)
    {
        <label class="home-team-label">
            <span class="home-team-text">@UIHelpers.GetAthletePosition(Model.PlayoffBracket.Parent2.Team2GroupPosition.Value)</span>
        </label>
    }
    else if (Model.PlayoffBracket != null)
    {
        if (Model.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Winner)
        {
            <a href="@Url.Action("PotentialTeams", "GameCycle", new { id = Model.PlayoffBracket.Id, index = 2 })"
               data-target="#barcket-potential-teams"
               data-toggle="modal">@Messages.Winner</a>
        }
        else if (Model.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Loseer || Model.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Condolence3rdPlaceBracket)
        {
            <a href="@Url.Action("PotentialTeams", "GameCycle", new { id = Model.PlayoffBracket.Id, index = 2 })"
               data-target="#barcket-potential-teams"
               data-toggle="modal">@Messages.Loser</a>
        }
        else
        {
            @("--")
        }
    }
</td>
