@model CreateWorkerForm
@{    
    var isCurrRegionalManager = ViewBag.IsRegionalManager ?? false;
}
<style>
    .pac-container {
        z-index: 10000 !important;
    }
</style>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">
        <span aria-hidden="true">&times;</span><span class="sr-only"></span>
    </button>
    <h4 class="modal-title">@(Model.UserId != 0 ? Model.FullNameFormatted : Messages.AddNew)</h4>
</div>
@using (Ajax.BeginForm("CreateWorker", "Jobs", null,
                            new AjaxOptions
                            {
                                UpdateTargetId = "worker_modal_form"
                            },
                            new { id = "userform", autocomplete = "off" }))
{

    @Html.HiddenFor(m => m.RelevantEntityLogicalName)
    @Html.HiddenFor(m => m.RelevantEntityId)
    @Html.HiddenFor(m => m.UserId)
    @Html.HiddenFor(m => m.SeasonId)
    @Html.HiddenFor(m => m.OnlyReferees)
    @Html.HiddenFor(x => x.AlternativeId)

<div class="modal-body">
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.FirstName:</label>
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName)
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.LastName:</label>
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName)
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.MiddleName:</label>
            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MiddleName)
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.IdentNum:</label>
            @Html.TextBoxFor(m => m.IdentNum, new { @class = $"form-control {(Model.AlternativeId ? "alternativeid" : "custid")}" })
            @Html.ValidationMessageFor(m => m.IdentNum)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.Email:</label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control custemail", autocomplete = "off" })
            @Html.ValidationMessageFor(m => m.Email)
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.Password:</label>
            <input style="display:none">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control pass", autocomplete = "new-password", value = Model.Password, data_val_pass = Messages.IvalidPasswrodPattern })
            @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>
    @if (isCurrRegionalManager)
    {
        <div class="row">
            <div class="form-group col-sm-6 userrole">
                <label class="control-label">@Messages.Role:</label>
                @Html.DropDownListFor(m => m.JobId, Model.JobsList, Messages.Select, new { @class = "form-control", id = "CreateJob" })
                @Html.ValidationMessageFor(m => m.JobId)
            </div>

            <div class="form-group col-sm-6">
                <label class="control-label">@Messages.Phone:</label>
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Phone)
            </div>
        </div>
        <div class="row">
            <div class="form-group col-sm-6">
                <label class="control-label">@Messages.Function:</label>
                @Html.TextBoxFor(m => m.Function, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Function)
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="form-group col-sm-6 userrole">
                <label class="control-label">@Messages.Role:</label>
                @Html.DropDownListFor(m => m.JobId, Model.JobsList, Messages.Select, new { @class = "form-control", id = "CreateJob" })
                @Html.ValidationMessageFor(m => m.JobId)
            </div>
            <div class="form-group col-sm-6 checkbox">
                <br />
                <label>@Html.CheckBoxFor(m => m.IsActive) <span> @Messages.Active</span></label>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-sm-6">
                <label class="control-label">@Messages.Function:</label>
                @Html.TextBoxFor(m => m.Function, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Function)
            </div>
        </div>
        <div class="row">
            <div class="form-group col-sm-6">
                <label class="control-label">@Messages.Phone:</label>
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Phone)
            </div>
            <div class="form-group col-sm-6">
                <label class="control-label">@Messages.WithholdingTax:</label>
                @Html.TextBoxFor(m => m.WithholdingTax, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.WithholdingTax)
            </div>
        </div>
    }
    <div class="row">
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.BirthDay:</label>
            @Html.TextBoxFor(m => m.BirthDate, "{0:dd/MM/yyyy}", new { @class = "form-control frm-date" })
            @Html.ValidationMessageFor(m => m.BirthDate)
        </div>
        <div class="form-group col-sm-6">
            <label class="control-label">@Messages.City:</label>
            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.City)
        </div>
    </div>
    <div class="row">
        <div class="form-group col-sm-12">
            <div id="locationField">
                <label class="control-label">@Messages.Address:</label>
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", id = "workerAddress", placeholder = $"{Messages.AutocompleteAddress}" })
                @Html.ValidationMessageFor(m => m.Address)
            </div>
        </div>
    </div>
</div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">@Messages.Close</button>
        <button type="submit" id="SubmitForm" class="btn btn-primary">@Messages.Save</button>
    </div>

}

@if (TempData["WorkerAddedSuccessfully"] != null)
{
    <script>
        if ('@ViewBag.OnlyReferees' === 'True') {
            $('#referee_modal_view').modal('hide');
            updateRefereesList('@ViewBag.OnlyReferees' === 'True');
        }
        else {
            $('#worker_modal_view').modal('hide');
            updateUsersList('@ViewBag.OnlyReferees' === 'True');
        }
    </script>
}
<script>
    var autocomplete;
    function initialize() {
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('workerAddress')),
            { types: ['geocode'] });
        google.maps.event.addListener(autocomplete, 'place_changed', function () {
        });
    }
    $(document).ready(function () {
        initialize();
    });
</script>

<script>
    $('#userform').validateBootstrap(true);
    $(".frm-date").datetimepicker({
        format: 'd/m/Y',
        timepicker: false,

        scrollMonth: false,
        scrollTime: false,
        scrollInput: false
    });
</script>
