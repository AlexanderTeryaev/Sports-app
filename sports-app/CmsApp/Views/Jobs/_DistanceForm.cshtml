@model IEnumerable<DataService.DTO.DistanceTableDto>
@{
    var mileKmListEmpty = new List<SelectListItem>
{
new SelectListItem {Text = Messages.Km, Value = "Km"},
new SelectListItem {Text = Messages.Miles, Value = "Miles"}
};
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h4 class="modal-title">@Messages.PaymentReport</h4>
</div>
<div class="modal-body">
    <div class="row col-sm-12" style="margin-bottom:15px;">
        <a id="excelBtnExp" class="btn btn-info" href="#" onclick="$('#exportclubslist').submit()">
            <i href="#" class="glyphicon glyphicon-open"></i> @Messages.ExportToExcel
            @using (Html.BeginForm("ExportDistanceTable", "Jobs", new { id = ViewBag.Id, logicalName = ViewBag.LogicalName, seasonId = ViewBag.SeasonId },
                FormMethod.Post, new { id = "exportclubslist" })) { }
        </a>
    </div>
    <div class="row offset-2">
        <div class="col-sm-12">
            <form class="form-inline">
                <div class="form-group">
                    <label class="control-label">@Messages.FromCity:</label>
                    <input id="cityFrom" style="width: 150px;" type="text" class="form-control" placeholder="@Messages.EnterCitiesName">
                </div>
                <div class="form-group">
                    <label class="control-label">@Messages.ToCity:</label>
                    <input id="cityTo" style="width: 150px;" type="text" class="form-control" placeholder="@Messages.EnterCitiesName">
                </div>
                <div class="form-group">
                    <label class="control-label">@Messages.Distance:</label>
                    <div class="input-group">
                        <input id="distanceNum" style="width: 101px;" type="number" class="form-control" min="1" name="DistanceNum">
                        <span class="input-group-btn" style="width: 50%">
                            <label class="control-label">@Messages.Distance:</label>
                            @Html.DropDownList("DistanceType", mileKmListEmpty, new { @class = "form-control", id = "distanceType" })
                        </span>
                    </div>
                </div>
                <a id="addnewformbtn" class="btn btn-primary">
                    @Messages.AddNew &nbsp;<i class="glyphicon glyphicon-plus-sign"></i>
                </a><div id="loading" style="display:none"><i class="@AppCss.Loading"></i>@Messages.Loading</div>
            </form>
        </div>
    </div>
    <div class="row offset-2">
        <div class="col-sm-8">
            <table id="distanceTable" class="table offset-3">
                @if (Model != null && Model.Any())
                {
                    <thead>
                        <tr>
                            <th>@Messages.FromCity</th>
                            <th>@Messages.ToCity</th>
                            <th>@Messages.Distance</th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                }
                <tbody>
                    @foreach (var distance in Model)
                    {
                        var mileKmList = new List<SelectListItem>
                                        {
                                            new SelectListItem {Text = Messages.Km, Value = "Km", Selected = distance.DistanceType == "Km" },
                                            new SelectListItem {Text = Messages.Miles, Value = "Miles", Selected = distance.DistanceType == "Miles"}
                                        };
                        <tr data-id="@distance.Id">
                            <td>
                                <input style="width: 150px;" type="text" class="form-control" placeholder="@Messages.EnterCitiesName" name="FromCity" value="@distance.CityFromName">
                            </td>
                            <td>
                                <input style="width: 150px;" type="text" class="form-control" placeholder="@Messages.EnterCitiesName" name="ToCity" value="@distance.CityToName">
                            </td>
                            <td>
                                <div class="input-group">
                                    <input style="width: 101px;" type="number" class="form-control" min="1" name="DistanceNum" value="@distance.Distance">
                                    <span class="input-group-btn" style="width: 50%">
                                        @Html.DropDownList("DistanceType", mileKmList, new { @class = "form-control" })
                                    </span>
                                </div>
                            </td>
                            <td><a id="saveValue" class="btn btn-primary">@Messages.Save</a></td>
                            <td><a id="deleteValue" class="@AppCss.Delete"></a></td>
                            <td><i id="resultIcon"></i></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <p id="loadingTable" style="display:none">
        @Messages.DistanceTableLoading<i class="@AppCss.Loading"></i>
    </p>
    <p id="distanceTableFormView">
    </p>
</div>


<script>

    function getDistanceTableInstance() {
        $.ajax({
            url: "/Jobs/GetDistanceTable",
            type: "POST",
            traditional: true,
            beforeSend: function() {
                $("#loadingTable").show();
            },
            data: {
                id: $("#RelevantEntityId").val(),
                logicalName: $("#RelevantEntityLogicalName").val(),
                seasonId: $("#SeasonId").val()
    },
            success: function (data) {
                $("#loadingTable").hide();
                $("#distanceTableFormView").html(data);
            }
        });
    }
    $(document).ready(function () {
        getDistanceTableInstance();
    });
    $("#addnewformbtn").click(function () {
        var cityFromLast = $("#distanceTable tr:last").find('input[name="FromCity"]').val();
        var cityToLast = $("#distanceTable tr:last").find('input[name="ToCity"]').val();
        var distanceLast = $("#distanceTable tr:last").find('input[name="DistanceNum"]').val();
        var rowCount = $('#distanceTable tr').length;
        if ((!cityFromLast || !cityToLast || !distanceLast) && rowCount != 0) {
            alert('@Messages.DistanceTable_LastRowError');
        }
        else {
            var cityFrom = $("#cityFrom").val();
            var cityTo = $("#cityTo").val();
            var distance = $("#distanceNum").val();
            var distanceType = $("#distanceType").val();
            if (cityFrom && cityTo && distance) {
                $.ajax({
                    url: "/Jobs/AddNewDistance",
                    type: "POST",
                    traditional: true,
                    data: {
                        cityFromName: cityFrom,
                        cityToName: cityTo,
                        distance: distance,
                        distanceType: distanceType,
                        relevantId: $("#RelevantEntityId").val(),
                        logicalName: $("#RelevantEntityLogicalName").val(),
                        seasonId: $("#SeasonId").val()
                    },
                    beforeSend: function () {
                        $("#loading").show();
                    },
                    complete: function () {
                        $('#loading').hide();
                    },
                    success: function (data) {
                        if (data.Message) {
                            alert(data.Message);
                        }
                        else {
                            $('#loading').hide();
                            $("#distanceform_pl").html(data);
                        }
                    }
                });
            }
            else {
                alert('@Messages.DistanceTable_EmptyFields');
            }
        }

    });

    $('table').on('click', '#saveValue', function (e) {
        var row = $(this).closest('tr');
        var id = row.attr('data-id');
        var cityFromName = row.find('input[name="FromCity"]').val();
        var cityToName = row.find('input[name="ToCity"]').val();
        var distance = row.find('input[name="DistanceNum"]').val();
        var distanceType = row.find('#DistanceType').val();

            $.ajax({
                type: 'POST',
                url: '/Jobs/UpdateDistance',
                data: {
                    relevantId: $("#RelevantEntityId").val(),
                    logicalName: $("#RelevantEntityLogicalName").val(),
                    id: id,
                    cityFromName: cityFromName,
                    cityToName: cityToName,
                    distance: distance,
                    distanceType: distanceType,
                    seasonId: $("#SeasonId").val()
                },
                success: function (data) {
                    if (data.IsSuccess === false) {
                        row.find('#resultIcon').addClass("glyphicon glyphicon-remove").css({ 'color': 'red' });
                        alert(data.Message);
                    } else {
                        $("#distanceform_pl").html(data);
                    }
                }
            });
    });

    $('table').on('click', '#deleteValue', function (e) {
        var row = $(this).closest('tr');
        var id = row.attr('data-id');
        $.ajax({
            type: 'POST',
            url: '/Jobs/DeleteDistance',
            data: {
                id: id,
                relevantId: $("#RelevantEntityId").val(),
                seasonId: $("#SeasonId").val(),
                logicalName: $("#RelevantEntityLogicalName").val()
            },
            success: function (data) {
                if (data.IsSuccess === false) {
                    alert(data.Message);
                } else {
                    $("#distanceform_pl").html(data);
                }
            }
        });
    });
</script>
