@model FriendshipPaymentDialogModel
    
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only"></span></button>
    <h4 class="modal-title">@Messages.PlayerProfile_FriendshipPaymentsTab</h4>
</div>

<div class="modal-body">
    <div class="row" style="margin-bottom: 25px;">
        <div class="text-center">
            <button type="button"
                    id="friendshipPayment-to-officeguy"
                    class="btn btn-primary">
                @Messages.BicycleFriendshipPayment_ProceedToOfficeGuy
            </button>
        </div>
    </div>

    @if (Model.CanSubmitManualPayment)
    {
        <div class="row">
            <div class="alert alert-info" role="alert">
                @Messages.BicycleFriendshipPayment_ManualPaymentTip
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    @using (Ajax.BeginForm("AddFriendshipPaymentManually", "OfficeGuy",
                        new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "friendshipPaymentDialog-content" },
                        new { id = "friendshipPayment-manual-form" }))
                    {
                        for (int i = 0; i < Model.TeamsPlayersIds.Length; i++)
                        {
                            @Html.HiddenFor(model => Model.TeamsPlayersIds[i])
                        }

                        <div class="form-group">
                            <label class="control-label">@Messages.Comment:</label>
                            @Html.TextAreaFor(x => x.Comment, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            <label class="control-label">@Messages.DatePaid:</label>
                            @Html.TextBoxFor(x => x.DatePaid, new { id = "friendshipPayment-datePaid", @class = "form-control" })
                        </div>

                        if (!Model.Completed && !Model.Error)
                        {
                            <div class="text-right">
                                <button type="submit" class="btn btn-primary">@Messages.Send</button>
                            </div>
                        }

                        if (Model.Completed)
                        {
                            <div class="alert alert-success" role="alert">
                                @Messages.BicycleFriendshipPayment_ManualPaymentSuccess
                            </div>
                            <script>
                                $("#friendshipPaymentDialog").trigger("friendshipPayment:completed"); //handled in Player Profile page
                            </script>
                        }
                        if (Model.Error)
                        {
                            <div class="alert alert-danger" role="alert">
                                @Messages.BicycleFriendshipPayment_ManualPaymentError
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
</div>

<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">@Messages.Close</button>
</div>

<script>
    $("#friendshipPayment-datePaid").datetimepicker({
        format: 'd/m/Y H:i',
        formatTime: 'H:i',
        formatDate: 'd/m/Y',
        step: 15,
        scrollMonth: false,
        scrollTime: false,
        scrollInput: false
    });

    $("#friendshipPayment-manual-form").on("submit",
        function() {
            $("#friendshipPayment-manual-form button[type=submit]").prop("disabled", true);
        });
</script>