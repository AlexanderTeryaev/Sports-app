@{
    ViewBag.Title = "Index";
}

@using LogLigFront.Controllers
@using Resources
@model DataService.LeagueRank.RankLeague
@{
    var leagueRankTable = ViewBag.PlayoffTable != null
       ? (IEnumerable<DataService.DTO.PlayoffRank>)ViewBag.PlayoffTable
       : Enumerable.Empty<DataService.DTO.PlayoffRank>();
    var hasPlayoff = TempData["IsPlayoff"] != null ? (bool)TempData["IsPlayoff"] : false;
}

<style>
    .player-scores {
        cursor: pointer;
    }
</style>


@if (leagueRankTable != null && leagueRankTable.Any())
{
    Html.RenderPartial("Tennis/_PlayoffTennisRankTable", leagueRankTable);
}
else if (leagueRankTable == null && !leagueRankTable.Any() && hasPlayoff)
{
    <div style="width:450px;" class="alert alert-danger">@Messages.FullRankingAlert</div>
}
<div class="modal fade" id="resbox" tabindex="-1" role="dialog">
</div>


@if (Model.Teams.Count > 0)
{
    <h2 class="main-title">
        @if (!string.IsNullOrEmpty(Model.Logo))
        {
            <img src="@UIHelper.GetLeagueLogo(Model.Logo)" class="img-circle logo" alt="" />
        }
        @Model.Name - @Messages.CompetitionTable

        <a href="#" class="btn btn-info show-hide-league-info" style="margin: 5px;">@Messages.LeagueAbout</a>
    </h2>
    <div class="row col-sm-12">
        <div class="rank">
            <div class="playOff">
                <div class="league-info">
                    <strong style="display: block;">
                        @Html.DisplayFor(x => x.AboutLeague)
                    </strong>

                    @Html.DisplayFor(x => x.LeagueStructure)
                </div>
                <br />
                <table class="table table-bordered tableRank">
                    <thead>
                        <tr>
                            <th class="col-sm-1">#</th>
                            <th>@Messages.Team</th>
                            <th class="col-sm-1">@Messages.Matches</th>
                            <th class="col-sm-1">@Messages.Points</th>
                            <th class="col-sm-1">@Messages.WinsNum</th>
                            <th class="col-sm-1">@Messages.LossNum</th>
                            <th class="col-sm-1">@Messages.Tie</th>
                            <th class="col-sm-1">@Messages.Sets+</th>
                            <th class="col-sm-1">@Messages.Sets-</th>
                            <th class="col-sm-1">@Messages.Gaming+</th>
                            <th class="col-sm-1">@Messages.Gaming-</th>
                            @*<th class="col-sm-1">@Messages.Penalty</th>*@

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var team in Model.Teams)
                        {
                            <tr>
                                <td>-</td>
                                <td>@team.Title</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                @*<td>0</td>*@
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="row col-sm-12">
        <h2 class="main-title">
            @if (!string.IsNullOrEmpty(Model.Logo))
            {
                <img src="@UIHelper.GetLeagueLogo(Model.Logo)" class="img-circle logo" alt="" />
            }
            @Model.Name - @Messages.CompetitionTable

            <span class="pull-left">
                <a href="#" class="btn btn-info" onclick="showHideExtendedTable();" style="margin: 5px;">@Messages.ExtendedTable</a>
                <a href="#" class="btn btn-info show-hide-league-info" style="margin: 5px;">@Messages.LeagueAbout</a>
            </span>
        </h2>

        <div class="playOff">
            <div class="league-info" style="display:none;">
                <strong style="display: block;">
                    @Html.DisplayFor(x => x.AboutLeague)
                </strong>

                <div style="white-space: pre-line;">  @Html.DisplayFor(x => x.LeagueStructure) </div>

            </div>
            @foreach (var stage in @Model.Stages)
            {
                var groups = stage.Groups;
                if (groups.Count() > 0 && groups.All(g => g.IsAdvanced))
                {
                    var firstGroup = groups.FirstOrDefault();
                    if (firstGroup != null && firstGroup.PlayoffBrackets != null)
                    {
                        int numOfBrackets = (int)firstGroup.PlayoffBrackets;
                        switch (numOfBrackets)
                        {
                            case 1:
                                <h3>גמר</h3>
                                break;
                            case 2:
                                <h3>חצי גמר</h3>
                                break;
                            case 4:
                                <h3>רבע גמר</h3>
                                break;
                            case 8:
                                <h3>שמינית גמר</h3>
                                break;
                            default:
                                <h3>@(numOfBrackets * 2) אחרונות</h3>
                                break;
                        }
                    }
                }
                else
                {
                    <h3 class="main-title">שלב מספר @stage.Number</h3>
                }


                <div class="playOff">
                    @foreach (var group in stage.Groups)
                    {
                        if (!group.IsAdvanced)
                        {
                            <h4>@group.Title</h4>
                        }



                        <table class="table extendedTable">
                            <thead>
                                @{
                                    char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower().Take(group.ExtendedTables.Count).ToArray();
                                    int charIndex = 0;
                                }
                                <tr>
                                    @for (var i = group.ExtendedTables.Count - 1; i >= 0; i--)
                                    {
                                        <th style="text-align: center;">@alpha[i]</th>
                                    }
                                    <th>@Messages.Team</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var team in group.ExtendedTables)
                                {
                                    <tr>
                                        @for (var i = group.ExtendedTables.Count - 1; i >= 0; i--)
                                        {
                                            if (group.ExtendedTables[i].TeamId == team.TeamId)
                                            {
                                                <td style="background-color: #eee"></td>
                                            }
                                            else
                                            {
                                                <td style="text-align: center;">
                                                    @foreach (var score in team.Scores.Where(x => x.OpponentTeamId == group.ExtendedTables[i].TeamId))
                                                    {
                                                        <div class="player-scores" onclick="displayPlayersScores(@score.GameId)">
                                                            <span>@score.OpponentScore : @score.TeamScore</span>
                                                            <br />
                                                        </div>
                                                    }
                                                </td>
                                            }

                                        }
                                        <td>@team.TeamName</td>
                                        <td>@alpha[charIndex++]</td>
                                    </tr>
                                }

                            </tbody>

                        </table>
                        <table class="table table-bordered tableRank">
                            <thead>
                                <tr>
                                    <th width="40px">#</th>
                                    <th>@Messages.TeamName</th>
                                    @if (!group.IsAdvanced)
                                    {
                                        <th class="col-sm-1">@Messages.Matches</th>
                                        <th class="col-sm-1">@Messages.Points</th>
                                        <th class="col-sm-1">@Messages.WinsNum</th>
                                        <th class="col-sm-1">@Messages.LossNum</th>
                                        <th class="col-sm-1">@Messages.Tie</th>
                                        <th class="col-sm-1">@Messages.Sets+</th>
                                        <th class="col-sm-1">@Messages.Sets-</th>
                                        <th class="col-sm-1">@Messages.Gaming+</th>
                                        <th class="col-sm-1">@Messages.Gaming-</th>
                                        @*<th class="col-sm-1">@Messages.Penalty</th>*@
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < group.Teams.Count(); i++)
                                {
                                    var team = group.Teams[i];
                                    <tr>
                                        @if (group.IsAdvanced)
                                        {
                                            int numOfBrackets = (int)group.PlayoffBrackets;
                                            if (i % ((numOfBrackets)) == 0)
                                            {
                                                <td>@(i + 1)</td>
                                            }
                                            else
                                            {
                                                <td>-</td>
                                            }
                                        }
                                        else
                                        {
                                            <td>@(i + 1)</td>
                                        }
                                        <td>
                                            <span class="rank-team-logo">
                                                <img src="@UIHelper.GetTeamLogo(team.Logo)" class="img-circle" alt="" />
                                            </span>
                                            @Html.ActionLink(team.Title, nameof(LeagueTableController.TeamSchedulesLink), "LeagueTable", new { id = team.Id, leagueId = Model.LeagueId, seasonId = Model.SeasonId }, new { @class = "main-title", target = "_blank" })
                                        </td>
                                        @if (!group.IsAdvanced)
                                        {
                                            if (Model.IsEmptyRankTable)
                                            {
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                @*<td>0</td>*@
                                            }
                                            else
                                            {
                                                if (!group.IsAdvanced)
                                                {
                                                    <td>@group.Teams[i].TennisInfo.Matches</td>
                                                    <td>@group.Teams[i].TennisInfo.Points</td>
                                                    <td>@group.Teams[i].TennisInfo.Wins</td>
                                                    <td>@group.Teams[i].TennisInfo.Lost</td>
                                                    <td>@group.Teams[i].TennisInfo.Ties</td>
                                                    <td>@group.Teams[i].TennisInfo.PlayersSetsWon</td>
                                                    <td>@group.Teams[i].TennisInfo.PlayersSetsLost</td>
                                                    <td>@group.Teams[i].TennisInfo.PlayersGamingWon</td>
                                                    <td>@group.Teams[i].TennisInfo.PlayersGamingLost</td>
                                                    <td>@*@group.Teams[i].TennisInfo.Penalties*@</td>
                                                }
                                            }

                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <br />
                    }
                </div>
            }
        </div>
    </div>
}



@section scripts{
    <script>
        function showHideExtendedTable() {
            $('.extendedTable').toggle();
        }
        function displayPlayersScores(gameId) {
            $.ajax({
                url: "/LeagueTable/TennisGameSets",
                type: "GET",
                data: { id: gameId },
                success: function (data) {
                    $("#resbox").html(data);

                    setTimeout(function () {
                        $("#resbox").modal('show');
                    }, 1500);
                }
            })
        }
    </script>
}